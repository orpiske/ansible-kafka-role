---
- name: Load role variables
  when: basic_server_common_packages is not defined
  include_vars:
    file: '{{ item }}'
  with_first_found:
    - vars/{{ ansible_distribution }}.yml
    - vars/{{ ansible_os_family }}.yml

- name: Install requirements
  tags:
    - basic
    - packages
  become: yes
  when:
    - ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
  package:
    name: "{{ kafka_requirements }}"
    state: present


- name: Create download directory
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - download
  file:
    path: "{{ kafka_download_dest }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0755

- name: Download kafka from {{ kafka_download_url }}
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - kafka
    - download
  get_url:
    url: "{{ kafka_download_url }}"
    dest: "{{ kafka_download_dest }}/{{ kafka_download_url | basename }}"
    force: yes
    validate_certs: "{{ kafka_validate_certs }}"

- name: Create install directory
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - logdir
  file:
    path: "{{ kafka_install_dest }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0755

- name: Create data directory
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - logdir
  file:
    path: "{{ kafka_data_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0755

- name: Unzip downloaded distribution to {{ kafka_install_dest }}
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - unarchive
  unarchive:
    src: "{{ kafka_download_dest }}/{{ kafka_download_url | basename }}"
    dest: "{{ kafka_install_dest }}/"
    remote_src: True
    list_files: yes
  register: archive_contents

- name: Create link to Kafka install dir {{ kafka_install_dest }}/{{ kafka_install_link }}
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - kafka
    - link
  file:
    src: "{{ kafka_install_dest }}/{{ archive_contents.files[0] | dirname }}"
    dest: "{{ kafka_install_dest }}/{{ kafka_install_link }}"
    state: link
    mode: 0755
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    force: true

- name: Configure Kafka Connect Standalone
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - kafka
    - configure
  template:
    src: templates/connect-standalone.properties.j2
    dest: "{{ kafka_install_dest }}/{{ kafka_install_link }}/config/connect-standalone.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0644

- name: Configure Kafka Connect Distributed
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - kafka
    - configure
  template:
    src: templates/connect-distributed.properties.j2
    dest: "{{ kafka_install_dest }}/{{ kafka_install_link }}/config/connect-distributed.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0644

- name: Configure Run Script
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - kafka
    - configure
  template:
    src: templates/run-{{ item }}.sh.j2
    dest: "{{ kafka_install_dest }}/run-{{ item }}.sh"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0755
  with_items:
    - kafka
    - zookeeper
    - connect-standalone

- name: Configure Kafka
  become: yes
  become_user: "{{ kafka_user }}"
  tags:
    - kafka
    - configure
  template:
    src: templates/{{ item }}.properties.j2
    dest: "{{ kafka_install_dest }}/{{ kafka_install_link }}/config/{{ item }}.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0755
  with_items:
    - server
    - zookeeper

- name: Create global config directory
  become: yes
  tags:
    - logdir
  file:
    path: "{{ kafka_global_config_dir }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0755

- name: Create service configuration Kafka
  become: yes
  tags:
    - kafka
    - configure
  template:
    src: templates/{{ item }}.sh.j2
    dest: "{{ kafka_global_config_dir }}/{{ item }}"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_user }}"
    mode: 0644
  with_items:
    - kafka-env

- name: Ensure bin directory is allowed by SELinux
  when: ansible_distribution == 'Fedora'
  become: yes
  command: chcon -R -t bin_t {{ kafka_install_dest }}/{{ kafka_install_link }}/bin

- name: Configure Systemd units
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
  become: yes
  tags:
    - kafka
    - systemd
  template:
    src: templates/{{ item }}.service.j2
    dest: "/etc/systemd/system/{{ item }}@.service"
    owner: "root"
    group: "root"
    mode: 0644
  with_items:
    - kafka
    - zookeeper

- name: Just force systemd to re-execute itself (2.8 and above)
  ansible.builtin.systemd:
    daemon_reexec: yes

- name: Enable Kafka Services
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
  become: yes
  command: systemctl enable --now {{ item }}@{{ kafka_user }}
  with_items:
    - kafka
    - zookeeper